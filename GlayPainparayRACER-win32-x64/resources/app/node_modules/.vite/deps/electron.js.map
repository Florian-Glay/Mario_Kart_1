{
  "version": 3,
  "sources": ["browser-external:fs", "browser-external:path", "../../electron/index.js", "dep:electron"],
  "sourcesContent": ["export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"fs\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"path\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "const fs = require('fs');\nconst path = require('path');\n\nconst pathFile = path.join(__dirname, 'path.txt');\n\nfunction getElectronPath () {\n  let executablePath;\n  if (fs.existsSync(pathFile)) {\n    executablePath = fs.readFileSync(pathFile, 'utf-8');\n  }\n  if (process.env.ELECTRON_OVERRIDE_DIST_PATH) {\n    return path.join(process.env.ELECTRON_OVERRIDE_DIST_PATH, executablePath || 'electron');\n  }\n  if (executablePath) {\n    return path.join(__dirname, 'dist', executablePath);\n  } else {\n    throw new Error('Electron failed to install correctly, please delete node_modules/electron and try installing again');\n  }\n}\n\nmodule.exports = getElectronPath();\n", "export default require(\"./node_modules/electron/index.js\");"],
  "mappings": ";;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,IAAO;AAAP;AAAA;AAAA,IAAO,aAAQ,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3B,MAAM;AACJ,cAAM,IAAI,MAAM,oGAAoG;AAAA,MACtH;AAAA,IACF,CAAC;AAAA;AAAA;;;ACJD;AAAA;AAAA;AAAA;AAAA,IAAO;AAAP;AAAA;AAAA,IAAO,eAAQ,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3B,MAAM;AACJ,cAAM,IAAI,MAAM,sGAAsG;AAAA,MACxH;AAAA,IACF,CAAC;AAAA;AAAA;;;ACJD;AAAA;AAAA,QAAM,KAAK;AACX,QAAM,OAAO;AAEb,QAAM,WAAW,KAAK,KAAK,WAAW,UAAU;AAEhD,aAAS,kBAAmB;AAC1B,UAAI;AACJ,UAAI,GAAG,WAAW,QAAQ,GAAG;AAC3B,yBAAiB,GAAG,aAAa,UAAU,OAAO;AAAA,MACpD;AACA,UAAI,QAAQ,IAAI,6BAA6B;AAC3C,eAAO,KAAK,KAAK,QAAQ,IAAI,6BAA6B,kBAAkB,UAAU;AAAA,MACxF;AACA,UAAI,gBAAgB;AAClB,eAAO,KAAK,KAAK,WAAW,QAAQ,cAAc;AAAA,MACpD,OAAO;AACL,cAAM,IAAI,MAAM,oGAAoG;AAAA,MACtH;AAAA,IACF;AAEA,WAAO,UAAU,gBAAgB;AAAA;AAAA;;;ACpBjC,IAAO,mBAAQ;",
  "names": []
}
